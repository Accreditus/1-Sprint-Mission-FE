generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  password        String
  nickname        String          @db.VarChar(20)
  image           String?         @db.Text
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  products        Product[]
  favorites       Product[]       @relation("UserFavorites")
  articles        Article[]
  comments        Comment[]
  refreshTokens   RefreshToken[]
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(30)
  description   String
  price         Int
  images        String[]
  tags          String[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  owner         User      @relation(fields: [ownerId], references: [id])
  ownerId       Int
  favoriteCount Int       @default(0)
  favoritedBy   User[]    @relation("UserFavorites")
  comments      Comment[]
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(50)
  content   String
  image     String?   @db.Text
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  writer    User      @relation(fields: [writerId], references: [id])
  writerId  Int
  likeCount Int       @default(0)
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  writer    User     @relation(fields: [writerId], references: [id])
  writerId  Int
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  article   Article? @relation(fields: [articleId], references: [id])
  articleId Int?
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}